getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Dataset\Hobby_Data.csv")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Rnotebook.Rmd")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Rnotebook.Rmd")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Rnotebook.Rmd")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby")
getwd()
setwd('C:\Users\96653\Documents\GitHub\KidsHobby')
getwd()
setwd('C:\Users\96653\Documents\GitHub\KidsHobby')
getwd()
dataset = read.csv('Hobby_Data.csv')
getwd()
dataset = read.csv('Hobby_Data.csv')
getwd()
getwd()
dataset = read.csv('Hobby_Data.csv')
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Dataset\Hobby_Data.csv")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("\Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("\Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:Users\96653\Documents\GitHub\KidsHobby\Dataset)
getwd()
setwd("C:Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:Users\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:Users\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:Users\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("C:\Documents\GitHub\KidsHobby\Dataset")
getwd()
getwd()
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Dataset")
setwd("C:\Users\96653\Documents\GitHub\KidsHobby\Dataset")
getwd()
setwd("/Users/Documents/GitHub/KidsHobby/Dataset")
getwd()
setwd("/Users/Documents/GitHub/KidsHobby/Dataset")
getwd()
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
getwd()
dataset = read.csv('Hobby_Data.csv')
View(dataset)
str(dataset)
getwd()
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
getwd()
dataset = read.csv('Hobby_Data.csv')
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
View(dataset)
str(dataset)
is.na(dataset)
is.na(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
View(dataset)
str(dataset)
sum(is.na(dataset))
is.na(dataset)
library(outliers)
OutTime_sprt = outlier(dataset$Time_sprt, logical =TRUE)
sum(OutTime_sprt)
Find_outlier = which(OutTime_sprt ==TRUE, arr.ind = TRUE)
OutTime_sprt
Find_outlier
OutGrasp_pow = outlier(dataset$Grasp_pow, logical =TRUE)
sum(OutGrasp_pow)
Find2_outlier = which(OutGrasp_pow ==TRUE, arr.ind = TRUE)
OutGrasp_pow
Find2_outlier
dataset= dataset[-Find_outlier,]
print(dataset)
dataset= dataset[-Find2_outlier,]
print(dataset)
dataset= dataset[-Find3_outlier,]
OutTime_art= outlier(dataset$Time_art, logical =TRUE)
sum(OutTime_art)
Find3_outlier = which(OutTime_art ==TRUE, arr.ind = TRUE)
OutTime_art
Find3_outlier
dataset= dataset[-Find3_outlier,]
print(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
View(dataset)
str(dataset)
dataset = read.csv("Hobby_Data.csv")
dataset = read.csv("Hobby_Data.csv")
dataset = read.csv("Hobby_Data.csv")
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
View(dataset)
str(dataset)
load("C:/Users/96653/Documents/GitHub/KidsHobby/.RData")
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
is.na(dataset)
sum(is.na(dataset))
is.na(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
setwd("/Users/96653/Documents/GitHub/KidsHobby/Dataset")
dataset = read.csv('Hobby_Data.csv')
dataset = read.csv("Hobby_Data.csv")
View(dataset)
str(dataset)
summary(dataset$Olympiad_Participation)
summary(dataset$Scholarship)
summary(dataset$School)
summary(dataset$Fav_sub)
summary(dataset$Projects)
summary(dataset$Grasp_pow)
summary(dataset$Time_sprt)
summary(dataset$Medals)
summary(dataset$Career_sprt)
summary(dataset$Act_sprt)
summary(dataset$Fant_arts)
summary(dataset$Won_arts)
summary(dataset$Time_art)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
str(dataset)
sample(dataset)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
str(dataset)
sample(dataset)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
str(dataset)
sample(dataset)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
calculate_mode_ordinal <- function(ordinal_data) {
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
# Identify the modes (categories with maximum frequency)
modes <- names(freq_table[freq_table == max_freq])
return(modes)
install.packages("psych")
library(psych)
calculate_mode_ordinal <- function(ordinal_data) {
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
# Identify the modes (categories with maximum frequency)
modes <- names(freq_table[freq_table == max_freq])
return(modes)
return(modes)
print(modes)
calculate_mode_ordinal <- function(ordinal_data)
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
# Identify the modes (categories with maximum frequency)
modes <- names(freq_table[freq_table == max_freq])
return(modes)
print(modes)
view(modes)
calculate_mode_ordinal <- function(ordinal_data)
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
# Identify the modes (categories with maximum frequency)
modes <- names(freq_table[freq_table == max_freq])
return(modes)
ordinal_data <- c("Low", "Medium", "High", "Medium", "High", "High", "Low", "Medium", "Low", "High")
modes <- calculate_mode_ordinal(ordinal_data)
# Print the mode(s)
print("Mode(s) for the ordinal data:")
print(modes)
print(modes)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
calculate_mode_ordinal <- function(ordinal_data)
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
# Identify the modes (categories with maximum frequency)
modes <- names(freq_table[freq_table == max_freq])
return(modes)
ordinal_data <- c("Low", "Medium", "High", "Medium", "High", "High", "Low", "Medium", "Low", "High")
modes <- calculate_mode_ordinal(ordinal_data)
# Print the mode(s)
print("Mode(s) for the ordinal data:")
print(modes)
install.packages("psych")
# Load the psych package
library(psych)
library(psych)
calculate_mode_ordinal <- function(ordinal_data)
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
library(psych)
calculate_mode_ordinal <- function(ordinal_data)
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
max_freq <- max(freq_table)
freq_table <- table(ordinal_data)
calculate_mode_ordinal <- function(ordinal_data)
freq_table <- table(ordinal_data)
max_freq <- max(freq_table)
calculate_mode_ordinal <- function(Hobb_Data)
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
calculate_mode_ordinal <- function(Hobby_Data)
# Calculate frequencies for each category
freq_table <- table(ordinal_data)
# Find the maximum frequency
max_freq <- max(freq_table)
calculate_mode_ordinal <- function(Hobby_Data)
# Calculate frequencies for each category
freq_table <- table(Hobb_Data)
# Find the maximum frequency
max_freq <- max(freq_table)
calculate_mode_ordinal <- function(Hobby_Data)
# Calculate frequencies for each category
freq_table <- table(Hobby_Data)
# Find the maximum frequency
max_freq <- max(freq_table)
calculate_mode_ordinal <- function(Dataset)
# Calculate frequencies for each category
freq_table <- table(Dataset)
# Find the maximum frequency
max_freq <- max(freq_table)
library(psych)
calculate_mode_ordinal <- function(Dataset)
# Calculate frequencies for each category
freq_table <- table(Dataset)
# Find the maximum frequency
max_freq <- max(freq_table)
calculate_mode_ordinal <- function(dataset)
# Calculate frequencies for each category
freq_table <- table(dataset)
calculate_mode_ordinal <- function(dataset)
# Calculate frequencies for each category
freq_table <- table(dataset)
# Find the maximum frequency
max_freq <- max(freq_table)
freq_table <- table(dataset)
max_freq <- max(freq_table)
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
install.packages("psych")
# Load the psych package
library(psych)
calculate_mode_ordinal <- function(dataset)
# Calculate frequencies for each category
freq_table <- table(dataset)
# Find the maximum frequency
max_freq <- max(freq_table)
# Identify the modes (categories with maximum frequency)
modes <- names(freq_table[freq_table == max_freq])
return(modes)
install.packages("psych")
mode(dataset$Olympiad_Participation)
mode(dataset$Scholarship)
mode(dataset$School)
mode(dataset$Fav_sub)
mode(dataset$Projects)
mode(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Medals)
mode(dataset$Career_sprt)
mode(dataset$Act_sprt)
mode(dataset$Fant_arts)
mode(dataset$Won_arts)
mean(dataset$Time_art)
# Load the psych package
library(psych)
calculate_mode_ordinal <- function(dataset)
# Calculate frequencies for each category
freq_table <- table(dataset)
# Find the maximum frequency
max_freq <- max(freq_table)
# Identify the modes (categories with maximum frequency)
modes <- names(freq_table[freq_table == max_freq])
return(modes)
mode(dataset$Grasp_pow)
mean(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mod(dataset$Time_sprt)
mode(dataset$Grasp_pow)
mean(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Time_sprt)
mode(dataset$Time_art)
mean(dataset$Time_art)
mode(dataset$Grasp_pow)
mean(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Time_sprt)
mode(dataset$Time_art)
Mode <- function(dataset) {
ux <- unique(dataset)
ux[which.max(tabulate(match(dataset, ux)))]
}
mean(dataset$Time_art)
mode(dataset$Grasp_pow)
mean(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Time_sprt)
mode(dataset$Time_art)
Mode <- function(dataset) {
ux <- unique(dataset)
ux[which.max(tabulate(match(dataset, ux)))]
}
mean(dataset$Time_art)
mode(dataset$Time_art)
Mode <- function(dataset) {
ux <- unique(dataset)
ux[which.max(tabulate(match(dataset, ux)))]
}
modes<-Mode(dataset)
print(Mode)
modes<-Mode(dataset)
print(Mode)
mode(dataset$Grasp_pow)
mean(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Time_sprt)
mode(dataset$Time_art)
Mode <- function(dataset)
ux <- unique(dataset)
ux[which.max(tabulate(match(dataset, ux)))]
Mode <- function(dataset)
ux <- unique(dataset)
ux[which.max(tabulate(match(dataset$School, ux)))]
Mode <- function(dataset) {
ux <- unique(dataset)
ux[which.max(tabulate(match(dataset$School, ux)))]
}
modes<-Mode(dataset)
print(Mode)
mode(dataset$Grasp_pow)
mean(dataset$Grasp_pow)
mean(dataset$Time_sprt)
mode(dataset$Time_sprt)
mode(dataset$Time_art)
Mode <- function(dataset) {
ux <- unique(dataset)
ux[which.max(tabulate(match(dataset$School, ux)))]
}
modes<-Mode(dataset)
print(Mode)
mean(dataset$Time_art)
mode(dataset$Time_sprt)
